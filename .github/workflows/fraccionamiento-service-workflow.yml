name: CI/CD - Fraccionamiento Service

on:
  push:
    branches:
      - main
    paths:
      - 'backend/fraccionamiento-service/**'

jobs:
  build-fraccionamiento-service:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Paso 1: Clonar el código
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Configurar JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # Paso 2.5: Obtener hash del último commit en la carpeta del microservicio
      - name: Get last commit hash for fraccionamiento-service
        id: get_hash
        run: echo "IMAGE_TAG=$(git log -n 1 --pretty=format:%h -- backend/fraccionamiento-service)" >> $GITHUB_ENV

      # Paso 3: Construir el microservicio con Maven
      - name: Build fraccionamiento-service with Maven
        run: mvn -f backend/fraccionamiento-service/pom.xml clean package -DskipTests

      # Paso 4: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 5: Cache de capas Docker
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        
      # Paso 6: Login a Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Paso 7: Build
      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fraccionamiento-service:latest \
                      -t ${{ secrets.DOCKERHUB_USERNAME }}/fraccionamiento-service:${{ env.IMAGE_TAG }} \
                      backend/fraccionamiento-service

      # Paso 8: Push
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fraccionamiento-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fraccionamiento-service:${{ env.IMAGE_TAG }}

      # Paso 9: Clonar el repo de despliegue
      - name: Checkout deploy repo
        uses: actions/checkout@v4
        with:
          repository: PaulaMilla/prueba_gps-deploy
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: deploy-repo

      # Paso 10: Actualizar el manifiesto con el nuevo tag
      - name: Update deployment manifest image tag
        run: |
          sed -i "s|\(image: .*/fraccionamiento-service:\).*|\1${{ env.IMAGE_TAG }}|" deploy-repo/fraccionamiento-service/deployment.yaml

      # Paso 11: Commit y push al repo de despliegue con reintento
      - name: Commit and push changes with retry
        run: |
          cd deploy-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add fraccionamiento-service/deployment.yaml
          git commit -m "Update fraccionamiento-service image tag to ${{ env.IMAGE_TAG }}" || echo "No changes to commit"
          
          for i in {1..3}; do
            git pull --rebase && git push && break || {
              echo "Push failed, retrying in 3s... (attempt $i)"
              sleep 3
            }
          done